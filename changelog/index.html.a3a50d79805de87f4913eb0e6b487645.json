{"head":{"title":"Changelog","layout":"BasicPage","description":"3.7.1 Enabling safe mode now turns off both postcss-merge-idents & postcss-normalize-url's stripWWW option. 3.7.0 Added: Reduceâ€¦"},"body":"<h2 id=\"371\">3.7.1<a href=\"#371\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Enabling safe mode now turns off both postcss-merge-idents &amp;\npostcss-normalize-url&#x27;s <code>stripWWW</code> option.</li>\n</ul>\n<h2 id=\"370\">3.7.0<a href=\"#370\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Added: Reduce <code>background-repeat</code> definitions; works with both this property\n&amp; the <code>background</code> shorthand, and aims to compress the extended two value\nsyntax into the single value syntax.</li>\n<li>Added: Reduce <code>initial</code> values for properties when the <em>actual</em> initial value\nis shorter; for example, <code>min-width: initial</code> becomes <code>min-width: 0</code>.</li>\n</ul>\n<h2 id=\"362\">3.6.2<a href=\"#362\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixed an issue where cssnano would crash on <code>steps(1)</code>.</li>\n</ul>\n<h2 id=\"361\">3.6.1<a href=\"#361\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixed an issue where cssnano would crash on <code>steps</code> functions with a\nsingle argument.</li>\n</ul>\n<h2 id=\"360\">3.6.0<a href=\"#360\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Added <code>postcss-discard-overridden</code> to safely discard overridden rules with\nthe same identifier (thanks to <a href=\"https://github.com/Justineo\"><strong>@Justineo</strong></a>).</li>\n<li>Added: Reduce animation/transition timing functions. Detects <code>cubic-bezier</code>\nfunctions that are equivalent to the timing keywords and compresses, as well\nas normalizing the <code>steps</code> timing function.</li>\n<li>Added the <code>perspective-origin</code> property to the list of supported properties\ntransformed by the <code>reduce-positions</code> transform.</li>\n</ul>\n<h2 id=\"352\">3.5.2<a href=\"#352\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Resolves an issue where the 3 or 4 value syntax for <code>background-position</code>\nwere being incorrectly converted.</li>\n</ul>\n<h2 id=\"351\">3.5.1<a href=\"#351\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Improves checking for <code>background-position</code> values in the <code>background</code>\nshorthand property.</li>\n</ul>\n<h2 id=\"350\">3.5.0<a href=\"#350\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Adds a new optimisation path which can minimise keyword values for\n<code>background-position</code> and the <code>background</code> shorthand.</li>\n<li>Tweaks to performance in the <code>core</code> module, now performs less AST passes.</li>\n<li>Now compiled with Babel 6.</li>\n</ul>\n<h2 id=\"340\">3.4.0<a href=\"#340\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Adds a new optimisation path which can minimise gradient parameters\nautomatically.</li>\n</ul>\n<h2 id=\"332\">3.3.2<a href=\"#332\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes an issue where using <code>options.safe</code> threw an error when cssnano was\nnot used as part of a PostCSS instance, but standalone (such as in modules\nlike gulp-cssnano). cssnano now renames <code>safe</code> internally to <code>isSafe</code>.</li>\n</ul>\n<h2 id=\"331\">3.3.1<a href=\"#331\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Unpins postcss-colormin from <code>2.1.2</code>, as the <code>2.1.3</code> &amp; <code>2.1.4</code> patches had\noptimization regressions that are now resolved in <code>2.1.5</code>.</li>\n</ul>\n<h2 id=\"330\">3.3.0<a href=\"#330\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Updated modules to use postcss-value-parser version 3 (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>Now converts between transform functions with postcss-reduce-transforms.\ne.g. <code>translate3d(0, 0, 0)</code> becomes <code>translateZ(0)</code>.</li>\n</ul>\n<h2 id=\"320\">3.2.0<a href=\"#320\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>cssnano no longer converts <code>outline: none</code> to <code>outline: 0</code>, as there are\nsome cases where the values are not equivalent (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>cssnano no longer converts for example <code>16px</code> to <code>1pc</code> <em>by default</em>. Length\noptimisations can be turned on via <code>{convertValues: {length: true}}</code>.</li>\n<li>Improved minimization of css functions (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n</ul>\n<h2 id=\"310\">3.1.0<a href=\"#310\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>This release swaps postcss-single-charset for postcss-normalize-charset,\nwhich can detect encoding to determine whether a charset is necessary.\nOptionally, you can set the <code>add</code> option to <code>true</code> to prepend a UTF-8\ncharset to the output automatically (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>A <code>safe</code> option was added, which disables more aggressive optimisations, as\na convenient preset configuration (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>Added an option to convert from <code>deg</code> to <code>turn</code> &amp; vice versa, &amp; improved\nminification performance in functions (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n</ul>\n<h2 id=\"303\">3.0.3<a href=\"#303\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes an issue where cssnano was removing spaces around forward slashes in\nstring literals (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n</ul>\n<h2 id=\"302\">3.0.2<a href=\"#302\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes an issue where cssnano was removing spaces around forward slashes in\ncalc functions.</li>\n</ul>\n<h2 id=\"301\">3.0.1<a href=\"#301\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Replaced css-list &amp; balanced-match with postcss-value-parser, reducing the\nmodule&#x27;s overall size (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n</ul>\n<h2 id=\"300\">3.0.0<a href=\"#300\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>All cssnano plugins and cssnano itself have migrated to PostCSS 5.x. Please\nmake sure that when using the 3.x releases that you use a 5.x compatible\nPostCSS runner.</li>\n<li>cssnano will now compress inline SVG through SVGO. Because of this change,\ninterfacing with cssnano must now be done through an asynchronous API. The\nmain <code>process</code> method has the same signature as a PostCSS processor instance.</li>\n<li>The old options such as <code>merge</code> &amp; <code>fonts</code> that were deprecated in\nrelease <code>2.5.0</code> were removed. The new architecture allows you to specify any\nmodule name to disable it.</li>\n<li>postcss-minify-selectors&#x27; at-rule compression was extracted out into\npostcss-minify-params (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>Overall performance of the module has improved dramatically, thanks to work\nby <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a> and input from the community.</li>\n<li>Improved selector merging/deduplication in certain use cases.</li>\n<li>cssnano no longer compresses hex colours in filter properties, to better\nsupport old versions of Internet Explorer (thanks to <a href=\"https://github.com/faddee\"><strong>@faddee</strong></a>).</li>\n<li>cssnano will not merge properties together that have an <code>inherit</code> keyword.</li>\n<li>postcss-minify-font-weight &amp; postcss-font-family were consolidated into\npostcss-minify-font-values. Using the old options will print deprecation\nwarnings (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>The cssnano CLI was extracted into a separate module, so that dependent\nmodules such as gulp-cssnano don&#x27;t download unnecessary extras.</li>\n</ul>\n<h2 id=\"261\">2.6.1<a href=\"#261\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Improved performance of the core module <code>functionOptimiser</code>.</li>\n</ul>\n<h2 id=\"260\">2.6.0<a href=\"#260\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Adds a new optimisation which re-orders properties that accept values in\nan arbitrary order. This can lead to improved merging behaviour in certain\ncases.</li>\n</ul>\n<h2 id=\"250\">2.5.0<a href=\"#250\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Adds support for disabling modules of the user&#x27;s choosing, with new option\nnames. The old options (such as <code>merge</code> &amp; <code>fonts</code>) will be removed in <code>3.0</code>.</li>\n</ul>\n<h2 id=\"240\">2.4.0<a href=\"#240\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>postcss-minify-selectors was extended to add support for conversion of\n<code>::before</code> to <code>:before</code>; this release removes the dedicated\npostcss-pseudoelements module.</li>\n</ul>\n<h2 id=\"230\">2.3.0<a href=\"#230\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Consolidated postcss-minify-trbl &amp; two integrated modules into\npostcss-merge-longhand.</li>\n</ul>\n<h2 id=\"220\">2.2.0<a href=\"#220\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Replaced integrated plugin filter with postcss-filter-plugins.</li>\n<li>Improved rule merging logic.</li>\n<li>Improved performance across the board by reducing AST iterations where it\nwas possible to do so.</li>\n<li>cssnano will now perform better whitespace compression when used with other\nPostCSS plugins.</li>\n</ul>\n<h2 id=\"211\">2.1.1<a href=\"#211\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes an issue where options were not passed to normalize-url.</li>\n</ul>\n<h2 id=\"210\">2.1.0<a href=\"#210\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Allow <code>postcss-font-family</code> to be disabled.</li>\n</ul>\n<h2 id=\"203\">2.0.3<a href=\"#203\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>cssnano can now be consumed with the parentheses-less method in PostCSS; e.g.\n<code>postcss([ cssnano ])</code>.</li>\n<li>Fixes an issue where &#x27;Din&#x27; was being picked up by the logic as a numeric\nvalue, causing the full font name to be incorrectly rearranged.</li>\n</ul>\n<h2 id=\"202\">2.0.2<a href=\"#202\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Extract trbl value reducing into a separate module.</li>\n<li>Refactor core longhand optimiser to not rely on trbl cache.</li>\n<li>Adds support for <code>ch</code> units; previously they were removed.</li>\n<li>Fixes parsing of some selector hacks.</li>\n<li>Fixes an issue where embedded base 64 data was being converted as if it were\na URL.</li>\n</ul>\n<h2 id=\"201\">2.0.1<a href=\"#201\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Add <code>postcss-plugin</code> keyword to package.json.</li>\n<li>Wraps all core processors with the PostCSS 4.1 plugin API.</li>\n</ul>\n<h2 id=\"200\">2.0.0<a href=\"#200\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Adds removal of outdated vendor prefixes based on browser support.</li>\n<li>Addresses an issue where relative path separators were converted to\nbackslashes on Windows.</li>\n<li>cssnano will now detect previous plugins and silently disable them when the\nfunctionality overlaps. This is to enable faster interoperation with cssnext.</li>\n<li>cssnano now exports as a PostCSS plugin. The simple interface is exposed\nat <code>cssnano.process(css, opts)</code> instead of <code>cssnano(css, opts)</code>.</li>\n<li>Improved URL detection when using two or more in the same declaration.</li>\n<li>node 0.10 is no longer officially supported.</li>\n</ul>\n<h2 id=\"143\">1.4.3<a href=\"#143\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes incorrect minification of <code>background:none</code> to <code>background:0 0</code>.</li>\n</ul>\n<h2 id=\"142\">1.4.2<a href=\"#142\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes an issue with nested URLs inside <code>url()</code> functions.</li>\n</ul>\n<h2 id=\"141\">1.4.1<a href=\"#141\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Addresses an issue where whitespace removal after a CSS function would cause\nrendering issues in Internet Explorer.</li>\n</ul>\n<h2 id=\"140\">1.4.0<a href=\"#140\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Adds support for removal of unused <code>@keyframes</code> and <code>@counter-style</code> at-rules.</li>\n<li>comments: adds support for user-directed removal of comments, with the\n<code>remove</code> option (thanks to <a href=\"https://github.com/dmitrykiselyov\"><strong>@dmitrykiselyov</strong></a>).</li>\n<li>comments: <code>removeAllButFirst</code> now operates on each CSS tree, rather than the\nfirst one passed to cssnano.</li>\n</ul>\n<h2 id=\"133\">1.3.3<a href=\"#133\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes incorrect minification of <code>border:none</code> to <code>border:0 0</code>.</li>\n</ul>\n<h2 id=\"132\">1.3.2<a href=\"#132\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Improved selector minifying logic, leading to better compression of attribute\nselectors.</li>\n<li>Improved comment discarding logic.</li>\n</ul>\n<h2 id=\"131\">1.3.1<a href=\"#131\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixes crash on undefined <code>decl.before</code> from prior AST.</li>\n</ul>\n<h2 id=\"130\">1.3.0<a href=\"#130\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Added support for bundling cssnano using webpack (thanks to <a href=\"https://github.com/MoOx\"><strong>@MoOx</strong></a>).</li>\n</ul>\n<h2 id=\"121\">1.2.1<a href=\"#121\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Fixed a bug where a CSS function keyword inside its value would throw\nan error.</li>\n</ul>\n<h2 id=\"120\">1.2.0<a href=\"#120\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Better support for merging properties without the existance of a shorthand\noverride.</li>\n<li>Can now &#x27;merge forward&#x27; adjacent rules as well as the previous &#x27;merge behind&#x27;\nbehaviour, leading to better compression.</li>\n<li>Selector re-ordering now happens last in the chain of plugins, to help clean\nup merged selectors.</li>\n</ul>\n<h2 id=\"110\">1.1.0<a href=\"#110\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Now can merge identifiers such as <code>@keyframes</code> and <code>@counter-style</code> if they\nhave duplicated properties but are named differently.</li>\n<li>Fixes an issue where duplicated keyframes with the same name would cause\nan infinite loop.</li>\n</ul>\n<h2 id=\"102\">1.0.2<a href=\"#102\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Improve module loading logic (thanks to <a href=\"https://github.com/tunnckoCore\"><strong>@tunnckoCore</strong></a>).</li>\n<li>Improve minification of numeric values, with better support for <code>rem</code>,\ntrailing zeroes and slash/comma separated values\n(thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a> &amp; <a href=\"https://github.com/tunnckoCore\"><strong>@tunnckoCore</strong></a>).</li>\n<li>Fixed an issue where <code>-webkit-tap-highlight-color</code> values were being\nincorrectly transformed to <code>transparent</code>. This is not supported in Safari.</li>\n<li>Added support for viewport units (thanks to <a href=\"https://github.com/TrySound\"><strong>@TrySound</strong></a>).</li>\n<li>Add MIT license file.</li>\n</ul>\n<h2 id=\"101\">1.0.1<a href=\"#101\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Add repository/author links to package.json.</li>\n</ul>\n<h2 id=\"100\">1.0.0<a href=\"#100\" class=\"phenomic-HeadingAnchor\">#</a></h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n","rawBody":"\n## 3.7.1\n\n-   Enabling safe mode now turns off both postcss-merge-idents &\n    postcss-normalize-url's `stripWWW` option.\n\n## 3.7.0\n\n-   Added: Reduce `background-repeat` definitions; works with both this property\n    & the `background` shorthand, and aims to compress the extended two value\n    syntax into the single value syntax.\n-   Added: Reduce `initial` values for properties when the _actual_ initial value\n    is shorter; for example, `min-width: initial` becomes `min-width: 0`.\n\n## 3.6.2\n\n-   Fixed an issue where cssnano would crash on `steps(1)`.\n\n## 3.6.1\n\n-   Fixed an issue where cssnano would crash on `steps` functions with a\n    single argument.\n\n## 3.6.0\n\n-   Added `postcss-discard-overridden` to safely discard overridden rules with\n    the same identifier (thanks to [**@Justineo**](https://github.com/Justineo)).\n-   Added: Reduce animation/transition timing functions. Detects `cubic-bezier`\n    functions that are equivalent to the timing keywords and compresses, as well\n    as normalizing the `steps` timing function.\n-   Added the `perspective-origin` property to the list of supported properties\n    transformed by the `reduce-positions` transform.\n\n## 3.5.2\n\n-   Resolves an issue where the 3 or 4 value syntax for `background-position`\n    were being incorrectly converted.\n\n## 3.5.1\n\n-   Improves checking for `background-position` values in the `background`\n    shorthand property.\n\n## 3.5.0\n\n-   Adds a new optimisation path which can minimise keyword values for\n    `background-position` and the `background` shorthand.\n-   Tweaks to performance in the `core` module, now performs less AST passes.\n-   Now compiled with Babel 6.\n\n## 3.4.0\n\n-   Adds a new optimisation path which can minimise gradient parameters\n    automatically.\n\n## 3.3.2\n\n-   Fixes an issue where using `options.safe` threw an error when cssnano was\n    not used as part of a PostCSS instance, but standalone (such as in modules\n    like gulp-cssnano). cssnano now renames `safe` internally to `isSafe`.\n\n## 3.3.1\n\n-   Unpins postcss-colormin from `2.1.2`, as the `2.1.3` & `2.1.4` patches had\n    optimization regressions that are now resolved in `2.1.5`.\n\n## 3.3.0\n\n-   Updated modules to use postcss-value-parser version 3 (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Now converts between transform functions with postcss-reduce-transforms.\n    e.g. `translate3d(0, 0, 0)` becomes `translateZ(0)`.\n\n## 3.2.0\n\n-   cssnano no longer converts `outline: none` to `outline: 0`, as there are\n    some cases where the values are not equivalent (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   cssnano no longer converts for example `16px` to `1pc` _by default_. Length\n    optimisations can be turned on via `{convertValues: {length: true}}`.\n-   Improved minimization of css functions (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.1.0\n\n-   This release swaps postcss-single-charset for postcss-normalize-charset,\n    which can detect encoding to determine whether a charset is necessary.\n    Optionally, you can set the `add` option to `true` to prepend a UTF-8\n    charset to the output automatically (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   A `safe` option was added, which disables more aggressive optimisations, as\n    a convenient preset configuration (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Added an option to convert from `deg` to `turn` & vice versa, & improved\n    minification performance in functions (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.0.3\n\n-   Fixes an issue where cssnano was removing spaces around forward slashes in\n    string literals (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.0.2\n\n-   Fixes an issue where cssnano was removing spaces around forward slashes in\n    calc functions.\n\n## 3.0.1\n\n-   Replaced css-list & balanced-match with postcss-value-parser, reducing the\n    module's overall size (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.0.0\n\n-   All cssnano plugins and cssnano itself have migrated to PostCSS 5.x. Please\n    make sure that when using the 3.x releases that you use a 5.x compatible\n    PostCSS runner.\n-   cssnano will now compress inline SVG through SVGO. Because of this change,\n    interfacing with cssnano must now be done through an asynchronous API. The\n    main `process` method has the same signature as a PostCSS processor instance.\n-   The old options such as `merge` & `fonts` that were deprecated in\n    release `2.5.0` were removed. The new architecture allows you to specify any\n    module name to disable it.\n-   postcss-minify-selectors' at-rule compression was extracted out into\n    postcss-minify-params (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Overall performance of the module has improved dramatically, thanks to work\n    by [**@TrySound**](https://github.com/TrySound) and input from the community.\n-   Improved selector merging/deduplication in certain use cases.\n-   cssnano no longer compresses hex colours in filter properties, to better\n    support old versions of Internet Explorer (thanks to [**@faddee**](https://github.com/faddee)).\n-   cssnano will not merge properties together that have an `inherit` keyword.\n-   postcss-minify-font-weight & postcss-font-family were consolidated into\n    postcss-minify-font-values. Using the old options will print deprecation\n    warnings (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   The cssnano CLI was extracted into a separate module, so that dependent\n    modules such as gulp-cssnano don't download unnecessary extras.\n\n## 2.6.1\n\n-   Improved performance of the core module `functionOptimiser`.\n\n## 2.6.0\n\n-   Adds a new optimisation which re-orders properties that accept values in\n    an arbitrary order. This can lead to improved merging behaviour in certain\n    cases.\n\n## 2.5.0\n\n-   Adds support for disabling modules of the user's choosing, with new option\n    names. The old options (such as `merge` & `fonts`) will be removed in `3.0`.\n\n## 2.4.0\n\n-   postcss-minify-selectors was extended to add support for conversion of\n    `::before` to `:before`; this release removes the dedicated\n    postcss-pseudoelements module.\n\n## 2.3.0\n\n-   Consolidated postcss-minify-trbl & two integrated modules into\n    postcss-merge-longhand.\n\n## 2.2.0\n\n-   Replaced integrated plugin filter with postcss-filter-plugins.\n-   Improved rule merging logic.\n-   Improved performance across the board by reducing AST iterations where it\n    was possible to do so.\n-   cssnano will now perform better whitespace compression when used with other\n    PostCSS plugins.\n\n## 2.1.1\n\n-   Fixes an issue where options were not passed to normalize-url.\n\n## 2.1.0\n\n-   Allow `postcss-font-family` to be disabled.\n\n## 2.0.3\n\n-   cssnano can now be consumed with the parentheses-less method in PostCSS; e.g.\n    `postcss([ cssnano ])`.\n-   Fixes an issue where 'Din' was being picked up by the logic as a numeric\n    value, causing the full font name to be incorrectly rearranged.\n\n## 2.0.2\n\n-   Extract trbl value reducing into a separate module.\n-   Refactor core longhand optimiser to not rely on trbl cache.\n-   Adds support for `ch` units; previously they were removed.\n-   Fixes parsing of some selector hacks.\n-   Fixes an issue where embedded base 64 data was being converted as if it were\n    a URL.\n\n## 2.0.1\n\n-   Add `postcss-plugin` keyword to package.json.\n-   Wraps all core processors with the PostCSS 4.1 plugin API.\n\n## 2.0.0\n\n-   Adds removal of outdated vendor prefixes based on browser support.\n-   Addresses an issue where relative path separators were converted to\n    backslashes on Windows.\n-   cssnano will now detect previous plugins and silently disable them when the\n    functionality overlaps. This is to enable faster interoperation with cssnext.\n-   cssnano now exports as a PostCSS plugin. The simple interface is exposed\n    at `cssnano.process(css, opts)` instead of `cssnano(css, opts)`.\n-   Improved URL detection when using two or more in the same declaration.\n-   node 0.10 is no longer officially supported.\n\n## 1.4.3\n\n-   Fixes incorrect minification of `background:none` to `background:0 0`.\n\n## 1.4.2\n\n-   Fixes an issue with nested URLs inside `url()` functions.\n\n## 1.4.1\n\n-   Addresses an issue where whitespace removal after a CSS function would cause\n    rendering issues in Internet Explorer.\n\n## 1.4.0\n\n-   Adds support for removal of unused `@keyframes` and `@counter-style` at-rules.\n-   comments: adds support for user-directed removal of comments, with the\n    `remove` option (thanks to [**@dmitrykiselyov**](https://github.com/dmitrykiselyov)).\n-   comments: `removeAllButFirst` now operates on each CSS tree, rather than the\n    first one passed to cssnano.\n\n## 1.3.3\n\n-   Fixes incorrect minification of `border:none` to `border:0 0`.\n\n## 1.3.2\n\n-   Improved selector minifying logic, leading to better compression of attribute\n    selectors.\n-   Improved comment discarding logic.\n\n## 1.3.1\n\n-   Fixes crash on undefined `decl.before` from prior AST.\n\n## 1.3.0\n\n-   Added support for bundling cssnano using webpack (thanks to [**@MoOx**](https://github.com/MoOx)).\n\n## 1.2.1\n\n-   Fixed a bug where a CSS function keyword inside its value would throw\n    an error.\n\n## 1.2.0\n\n-   Better support for merging properties without the existance of a shorthand\n    override.\n-   Can now 'merge forward' adjacent rules as well as the previous 'merge behind'\n    behaviour, leading to better compression.\n-   Selector re-ordering now happens last in the chain of plugins, to help clean\n    up merged selectors.\n\n## 1.1.0\n\n-   Now can merge identifiers such as `@keyframes` and `@counter-style` if they\n    have duplicated properties but are named differently.\n-   Fixes an issue where duplicated keyframes with the same name would cause\n    an infinite loop.\n\n## 1.0.2\n\n-   Improve module loading logic (thanks to [**@tunnckoCore**](https://github.com/tunnckoCore)).\n-   Improve minification of numeric values, with better support for `rem`,\n    trailing zeroes and slash/comma separated values\n    (thanks to [**@TrySound**](https://github.com/TrySound) & [**@tunnckoCore**](https://github.com/tunnckoCore)).\n-   Fixed an issue where `-webkit-tap-highlight-color` values were being\n    incorrectly transformed to `transparent`. This is not supported in Safari.\n-   Added support for viewport units (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Add MIT license file.\n\n## 1.0.1\n\n-   Add repository/author links to package.json.\n\n## 1.0.0\n\n-   Initial release.\n","raw":"---\ntitle: Changelog\nlayout: BasicPage\n---\n\n## 3.7.1\n\n-   Enabling safe mode now turns off both postcss-merge-idents &\n    postcss-normalize-url's `stripWWW` option.\n\n## 3.7.0\n\n-   Added: Reduce `background-repeat` definitions; works with both this property\n    & the `background` shorthand, and aims to compress the extended two value\n    syntax into the single value syntax.\n-   Added: Reduce `initial` values for properties when the _actual_ initial value\n    is shorter; for example, `min-width: initial` becomes `min-width: 0`.\n\n## 3.6.2\n\n-   Fixed an issue where cssnano would crash on `steps(1)`.\n\n## 3.6.1\n\n-   Fixed an issue where cssnano would crash on `steps` functions with a\n    single argument.\n\n## 3.6.0\n\n-   Added `postcss-discard-overridden` to safely discard overridden rules with\n    the same identifier (thanks to [**@Justineo**](https://github.com/Justineo)).\n-   Added: Reduce animation/transition timing functions. Detects `cubic-bezier`\n    functions that are equivalent to the timing keywords and compresses, as well\n    as normalizing the `steps` timing function.\n-   Added the `perspective-origin` property to the list of supported properties\n    transformed by the `reduce-positions` transform.\n\n## 3.5.2\n\n-   Resolves an issue where the 3 or 4 value syntax for `background-position`\n    were being incorrectly converted.\n\n## 3.5.1\n\n-   Improves checking for `background-position` values in the `background`\n    shorthand property.\n\n## 3.5.0\n\n-   Adds a new optimisation path which can minimise keyword values for\n    `background-position` and the `background` shorthand.\n-   Tweaks to performance in the `core` module, now performs less AST passes.\n-   Now compiled with Babel 6.\n\n## 3.4.0\n\n-   Adds a new optimisation path which can minimise gradient parameters\n    automatically.\n\n## 3.3.2\n\n-   Fixes an issue where using `options.safe` threw an error when cssnano was\n    not used as part of a PostCSS instance, but standalone (such as in modules\n    like gulp-cssnano). cssnano now renames `safe` internally to `isSafe`.\n\n## 3.3.1\n\n-   Unpins postcss-colormin from `2.1.2`, as the `2.1.3` & `2.1.4` patches had\n    optimization regressions that are now resolved in `2.1.5`.\n\n## 3.3.0\n\n-   Updated modules to use postcss-value-parser version 3 (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Now converts between transform functions with postcss-reduce-transforms.\n    e.g. `translate3d(0, 0, 0)` becomes `translateZ(0)`.\n\n## 3.2.0\n\n-   cssnano no longer converts `outline: none` to `outline: 0`, as there are\n    some cases where the values are not equivalent (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   cssnano no longer converts for example `16px` to `1pc` _by default_. Length\n    optimisations can be turned on via `{convertValues: {length: true}}`.\n-   Improved minimization of css functions (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.1.0\n\n-   This release swaps postcss-single-charset for postcss-normalize-charset,\n    which can detect encoding to determine whether a charset is necessary.\n    Optionally, you can set the `add` option to `true` to prepend a UTF-8\n    charset to the output automatically (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   A `safe` option was added, which disables more aggressive optimisations, as\n    a convenient preset configuration (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Added an option to convert from `deg` to `turn` & vice versa, & improved\n    minification performance in functions (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.0.3\n\n-   Fixes an issue where cssnano was removing spaces around forward slashes in\n    string literals (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.0.2\n\n-   Fixes an issue where cssnano was removing spaces around forward slashes in\n    calc functions.\n\n## 3.0.1\n\n-   Replaced css-list & balanced-match with postcss-value-parser, reducing the\n    module's overall size (thanks to [**@TrySound**](https://github.com/TrySound)).\n\n## 3.0.0\n\n-   All cssnano plugins and cssnano itself have migrated to PostCSS 5.x. Please\n    make sure that when using the 3.x releases that you use a 5.x compatible\n    PostCSS runner.\n-   cssnano will now compress inline SVG through SVGO. Because of this change,\n    interfacing with cssnano must now be done through an asynchronous API. The\n    main `process` method has the same signature as a PostCSS processor instance.\n-   The old options such as `merge` & `fonts` that were deprecated in\n    release `2.5.0` were removed. The new architecture allows you to specify any\n    module name to disable it.\n-   postcss-minify-selectors' at-rule compression was extracted out into\n    postcss-minify-params (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Overall performance of the module has improved dramatically, thanks to work\n    by [**@TrySound**](https://github.com/TrySound) and input from the community.\n-   Improved selector merging/deduplication in certain use cases.\n-   cssnano no longer compresses hex colours in filter properties, to better\n    support old versions of Internet Explorer (thanks to [**@faddee**](https://github.com/faddee)).\n-   cssnano will not merge properties together that have an `inherit` keyword.\n-   postcss-minify-font-weight & postcss-font-family were consolidated into\n    postcss-minify-font-values. Using the old options will print deprecation\n    warnings (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   The cssnano CLI was extracted into a separate module, so that dependent\n    modules such as gulp-cssnano don't download unnecessary extras.\n\n## 2.6.1\n\n-   Improved performance of the core module `functionOptimiser`.\n\n## 2.6.0\n\n-   Adds a new optimisation which re-orders properties that accept values in\n    an arbitrary order. This can lead to improved merging behaviour in certain\n    cases.\n\n## 2.5.0\n\n-   Adds support for disabling modules of the user's choosing, with new option\n    names. The old options (such as `merge` & `fonts`) will be removed in `3.0`.\n\n## 2.4.0\n\n-   postcss-minify-selectors was extended to add support for conversion of\n    `::before` to `:before`; this release removes the dedicated\n    postcss-pseudoelements module.\n\n## 2.3.0\n\n-   Consolidated postcss-minify-trbl & two integrated modules into\n    postcss-merge-longhand.\n\n## 2.2.0\n\n-   Replaced integrated plugin filter with postcss-filter-plugins.\n-   Improved rule merging logic.\n-   Improved performance across the board by reducing AST iterations where it\n    was possible to do so.\n-   cssnano will now perform better whitespace compression when used with other\n    PostCSS plugins.\n\n## 2.1.1\n\n-   Fixes an issue where options were not passed to normalize-url.\n\n## 2.1.0\n\n-   Allow `postcss-font-family` to be disabled.\n\n## 2.0.3\n\n-   cssnano can now be consumed with the parentheses-less method in PostCSS; e.g.\n    `postcss([ cssnano ])`.\n-   Fixes an issue where 'Din' was being picked up by the logic as a numeric\n    value, causing the full font name to be incorrectly rearranged.\n\n## 2.0.2\n\n-   Extract trbl value reducing into a separate module.\n-   Refactor core longhand optimiser to not rely on trbl cache.\n-   Adds support for `ch` units; previously they were removed.\n-   Fixes parsing of some selector hacks.\n-   Fixes an issue where embedded base 64 data was being converted as if it were\n    a URL.\n\n## 2.0.1\n\n-   Add `postcss-plugin` keyword to package.json.\n-   Wraps all core processors with the PostCSS 4.1 plugin API.\n\n## 2.0.0\n\n-   Adds removal of outdated vendor prefixes based on browser support.\n-   Addresses an issue where relative path separators were converted to\n    backslashes on Windows.\n-   cssnano will now detect previous plugins and silently disable them when the\n    functionality overlaps. This is to enable faster interoperation with cssnext.\n-   cssnano now exports as a PostCSS plugin. The simple interface is exposed\n    at `cssnano.process(css, opts)` instead of `cssnano(css, opts)`.\n-   Improved URL detection when using two or more in the same declaration.\n-   node 0.10 is no longer officially supported.\n\n## 1.4.3\n\n-   Fixes incorrect minification of `background:none` to `background:0 0`.\n\n## 1.4.2\n\n-   Fixes an issue with nested URLs inside `url()` functions.\n\n## 1.4.1\n\n-   Addresses an issue where whitespace removal after a CSS function would cause\n    rendering issues in Internet Explorer.\n\n## 1.4.0\n\n-   Adds support for removal of unused `@keyframes` and `@counter-style` at-rules.\n-   comments: adds support for user-directed removal of comments, with the\n    `remove` option (thanks to [**@dmitrykiselyov**](https://github.com/dmitrykiselyov)).\n-   comments: `removeAllButFirst` now operates on each CSS tree, rather than the\n    first one passed to cssnano.\n\n## 1.3.3\n\n-   Fixes incorrect minification of `border:none` to `border:0 0`.\n\n## 1.3.2\n\n-   Improved selector minifying logic, leading to better compression of attribute\n    selectors.\n-   Improved comment discarding logic.\n\n## 1.3.1\n\n-   Fixes crash on undefined `decl.before` from prior AST.\n\n## 1.3.0\n\n-   Added support for bundling cssnano using webpack (thanks to [**@MoOx**](https://github.com/MoOx)).\n\n## 1.2.1\n\n-   Fixed a bug where a CSS function keyword inside its value would throw\n    an error.\n\n## 1.2.0\n\n-   Better support for merging properties without the existance of a shorthand\n    override.\n-   Can now 'merge forward' adjacent rules as well as the previous 'merge behind'\n    behaviour, leading to better compression.\n-   Selector re-ordering now happens last in the chain of plugins, to help clean\n    up merged selectors.\n\n## 1.1.0\n\n-   Now can merge identifiers such as `@keyframes` and `@counter-style` if they\n    have duplicated properties but are named differently.\n-   Fixes an issue where duplicated keyframes with the same name would cause\n    an infinite loop.\n\n## 1.0.2\n\n-   Improve module loading logic (thanks to [**@tunnckoCore**](https://github.com/tunnckoCore)).\n-   Improve minification of numeric values, with better support for `rem`,\n    trailing zeroes and slash/comma separated values\n    (thanks to [**@TrySound**](https://github.com/TrySound) & [**@tunnckoCore**](https://github.com/tunnckoCore)).\n-   Fixed an issue where `-webkit-tap-highlight-color` values were being\n    incorrectly transformed to `transparent`. This is not supported in Safari.\n-   Added support for viewport units (thanks to [**@TrySound**](https://github.com/TrySound)).\n-   Add MIT license file.\n\n## 1.0.1\n\n-   Add repository/author links to package.json.\n\n## 1.0.0\n\n-   Initial release.\n","__filename":"changelog.md","__url":"/changelog/","__resourceUrl":"/changelog/index.html","__dataUrl":"/changelog/index.html.a3a50d79805de87f4913eb0e6b487645.json"}